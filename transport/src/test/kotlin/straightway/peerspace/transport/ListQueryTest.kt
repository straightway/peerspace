/*
 * Copyright 2016 github.com/straightway
 *
 *  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package straightway.peerspace.transport

import org.junit.jupiter.api.Test
import straightway.peerspace.data.Id
import straightway.testing.flow.Equal
import straightway.testing.flow.expect
import straightway.testing.flow.is_
import straightway.testing.flow.to_
import straightway.testing.testAutoGeneratedDataClassMethods
import straightway.units.absolute
import straightway.units.get
import straightway.units.second

class ListQueryTest {

    companion object {
        val sut = ListQuery(Id("Id"), 1[second].absolute..2[second].absolute)
    }

    @Test
    fun testAutoGeneratedDataClassMethods() =
            sut.testAutoGeneratedDataClassMethods()

    @Test
    fun `id is accessible`() =
            expect(sut.listId is_ Equal to_ Id("Id"))

    @Test
    fun `timestamps is accessible`() =
            expect(sut.timestamps is_ Equal to_ 1[second].absolute..2[second].absolute)
}