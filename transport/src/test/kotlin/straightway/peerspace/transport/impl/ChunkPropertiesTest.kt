/*
 * Copyright 2016 github.com/straightway
 *
 *  Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package straightway.peerspace.transport.impl

import org.junit.jupiter.api.Test
import straightway.peerspace.transport.ChunkProperties
import straightway.testing.flow.Equal
import straightway.testing.flow.expect
import straightway.testing.flow.is_
import straightway.testing.flow.to_
import straightway.testing.testAutoGeneratedDataClassMethods

class ChunkPropertiesTest {

    private companion object {
        val sut = ChunkProperties(1, 2, 3, 4, 5)
    }

    @Test
    fun `test auto-generated properties`() = sut.testAutoGeneratedDataClassMethods()

    @Test
    fun `chunkSizeBytes is accessible`() = expect(sut.chunkSizeBytes is_ Equal to_ 1)

    @Test
    fun `maxReferences is accessible`() = expect(sut.maxReferences is_ Equal to_ 2)

    @Test
    fun `referenceBlockSizeBytes is accessible`() = expect(sut.referenceBlockSizeBytes is_ Equal to_ 3)

    @Test
    fun `dataBlockSizeBytes is accessible`() = expect(sut.dataBlockSizeBytes is_ Equal to_ 4)

    @Test
    fun `cryptoContainerHeaderSizeBytes is accessible`() = expect(sut.cryptoContainerHeaderSizeBytes is_ Equal to_ 5)
}